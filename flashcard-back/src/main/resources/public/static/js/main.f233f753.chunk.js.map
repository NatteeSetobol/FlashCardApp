{"version":3,"sources":["models/member.ts","services/login.ts","components/login.tsx","components/loginpage.tsx","services/deck.ts","sliceoflife/deck.ts","components/createdeckmodel.tsx","components/deletedeckmodel.tsx","components/indexpage.tsx","components/decks.tsx","services/card.ts","components/editcardmodel.tsx","components/createcardmodel.tsx","components/deletecardmodel.tsx","components/deckedit.tsx","components/textscrollcomponent.tsx","components/datecomponent.tsx","components/decksettings.tsx","Router/AppRoutes.tsx","components/navbar.tsx","store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Member","id","username","password","loginApi","createApi","reducerPath","baseQuery","fetchBaseQuery","tagTypes","endpoints","builder","login","mutation","query","input","url","method","headers","body","invalidatesTags","useLoginMutation","Login","useState","userEmail","setUserEmail","userPassword","setUserPassword","data","isLoading","error","isSuccess","isError","didClick","setDidClick","history","useHistory","useEffect","toast","push","className","type","placeholder","onChange","e","target","value","onClick","member","LoginPage","deckApi","createDeck","getAllDecks","deleteDeck","useDeleteDeckMutation","useCreateDeckMutation","useGetAllDecksQuery","deckSlice","createSlice","name","initialState","decks","selected","selectedCards","selectedCardIndex","reducers","setDeck","state","action","payload","addDeck","concat","getDeck","setSelectedDeck","setSelectedCards","setSelectedCardIndex","updateCard","actions","CreateDeckModal","setShow","dname","inputs","setInputs","clicked","setClicked","resultStatus","setResultStatus","CreateNewDeck","dispatch","useDispatch","onSubmit","event","preventDefault","persist","DeleteDeckModel","props","DeleteDeck","selectedDeck","useSelector","myDecks","closeCallback","IndexPage","showDelete","setShowDelete","deleteClose","show","handleClose","isLoaded","setIsLoaded","setIsMapped","gotoDeck","deck","settings","mapData","Modal","onHide","backdrop","Header","Title","Body","childData","Footer","Button","variant","scope","map","href","dueDate","totalCards","totalStudied","Decks","myDeck","cardApi","createCard","editCard","card","deleteCard","getAllCards","deckId","useCreateCardMutation","useGetAllCardsQuery","useEditCardMutation","useDeleteCardMutation","EditCardModal","setEditShow","cardBack","cardFront","EditCard","c","back","front","HandleInputChange","newCard","CreateCardModal","CreateNewCard","DeleteCardModel","DeleteCard","DeckEdit","myCards","editShow","editHandleClose","deleteShow","setDeleteShow","deleteHandleClose","cardId","i","TextScrollComponent","count","setCount","oldValue","parentCallback","handleOnChange","DateComponent","days","setDays","hours","setHours","mins","setMins","DeckSettings","ButtonGroup","checked","onlabel","offlabel","AppRoutes","exact","path","component","NavBar","store","configureStore","reducer","deckReducer","middleware","getDefaultMiddiware","thunk","App","CookiesProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f233f753.chunk.js","sourcesContent":["export class Member {\n\tconstructor(public id:number, \n\t\t\t\tpublic username:String,\n\t\t\t\tpublic password:String\n\t\t\t\t)\n\t{\n\t}\n}\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\n\n\nexport const loginApi = createApi({\n\treducerPath: `login`,\n\tbaseQuery: fetchBaseQuery( {\n\t}),\n\ttagTypes: ['Post', 'User'],\n\tendpoints: (builder) => ({\n\t\tlogin: builder.mutation ({\n\t\t\tquery: (input) => ({\n\t\t\t\turl: `user`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json; charset=utf-8'\n                },\n\t\t\t\tbody: input,\n\t\t\t}),\n\t\t\tinvalidatesTags: ['Post'],\n\t\t}),\n\t}),\n});\n\nexport const { useLoginMutation } = loginApi;\n","import { useHistory } from \"react-router-dom\"\nimport React, {useEffect,useState} from \"react\";\nimport { Member} from \"./../models/member\"\nimport { apiLogin } from \"../remote/loginApi\"\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport { useLoginMutation } from \"../services/login\"\nimport '../css/login.css'\n\nconst Login:React.FC<unknown> = () => {\n\tconst [ userEmail, setUserEmail] = useState<string>('');\n\tconst [ userPassword, setUserPassword] = useState<string>('');\n\tconst [  Login, { data, error,isLoading, isSuccess, isError }  ] = useLoginMutation()\n\tconst [ didClick, setDidClick] = useState<boolean>(false);\n\tlet history = useHistory();\n\n\tuseEffect(()=> {\n\t\tsetDidClick(false);\n\t}, [])\n\n\n\tconst handleClick = () => {\n\t\t//checkLogin();\n\t\tconst member = new Member(0,userEmail, userPassword);\n        Login(member);\n\t\tsetUserEmail(\"\");\n\t\tsetUserPassword(\"\");\n\t\tsetDidClick(true);\n\t};\n\n\tconst onEmailChange = (e: React.ChangeEvent<HTMLInputElement>)=> {\n\t\tsetUserEmail(e.target.value);\n\t}\n\n\tconst onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetUserPassword(e.target.value);\n\t}\n\n\tif (isSuccess)\n\t{\n\t\tif (data)\n\t\t{\n\t\t\tif (!data.error)\n\t\t\t{\n\t\t\t\thistory.push(\"/index\");\n\t\t\t} else {\n\t\t\t\tif (didClick)\n\t\t\t\t{\n\t\t\t\t\ttoast.error(data.error);\n\t\t\t\t\tsetDidClick(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\n\t\t<div id=\"main\">\n\t\t\t\t<div>\n\n\t\t\t\t\t<div className=\"comp\">\n\t\t\t\t\t\t<div className=\"compbox\">\n\t\t\t\t\t\t\t<label className=\"col-form-label col-form-label-sm\">\n\t\t\t\t\t\t\t\tUsername:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"compbox\">\n\t\t\t\t\t\t\t<input type=\"name\" className=\"form-control form-control-sm\" id=\"email\" placeholder=\"username\" onChange={onEmailChange} value={userEmail} /> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"comp\">\n\t\t\t\t\t\t<div className=\"compbox\">\n\t\t\t\t\t\t\t<label className=\"col-form-label col-form-label-sm\">\n\t\t\t\t\t\t\t\tPassword :\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"compbox\">\n\t\t\t\t\t\t\t<input type=\"password\" className=\"form-control form-control-sm\" id=\"password\" placeholder=\"password\" onChange={onPasswordChange} value={userPassword}  /> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className=\"comp\">\n\t\t\t\t\t<div className=\"compbox blankspot\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"compbox\">\n\t\t\t\t\t\t <button type=\"submit\" className=\"btn btn-primary pull-right\" onClick={handleClick} >Submit</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n                { isError ? (\n            \n\t\t\t\t\t\t<> Sorry, an Error has occured.   </>\n\t\t\t\t\t) : isSuccess ? (\n\t\t\t\t\t\t<> \t\t\t\t\t   \n\t\t\t\t\t\t</>\n\t\t\t\t\t) : isLoading ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tloading...\n\t\t\t\t\t     </div>\n\t\t\t\t\t): null\n                }\n\n\t\t</div>\n\t\t   );\n}\n\nexport default Login;\n","import React from 'react'\nimport Login from './login';\n\nconst LoginPage:React.FC<unknown> = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-6 col-md-4\">\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-6 col-md-4\">\n\t\t\t\t\t<Login />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-6 col-md-4\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default LoginPage;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\n\nexport const deckApi = createApi({\n\treducerPath: `Deck`,\n\tbaseQuery: fetchBaseQuery( {\n\t}),\n\tendpoints: (builder) => ({\n\t\tcreateDeck: builder.mutation ({\n\t\t\tquery: (input) => ({\n\t\t\t\turl: `deck`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json; charset=utf-8'\n                },\n\t\t\t\tbody: input,\n\t\t\t}),\n\t\t}),\n\t\tgetAllDecks: builder.query({\n\t\t\tquery:() => '/decks'\n\t\t}),\n\t\tdeleteDeck: builder.mutation ({\n\t\t\tquery: (input) => ({\n\t\t\t\turl: `deck`,\n\t\t\t\tmethod: `DELETE`,\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json; charset=utf-8'\n                },\n\t\t\t\tbody: input,\n\t\t\t}),\n\t\t}),\n\t}),\n});\n\nexport const { useDeleteDeckMutation,useCreateDeckMutation, useGetAllDecksQuery } = deckApi;\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { Card } from \"../models/card\"\n\nexport const deckSlice = createSlice({\n\tname: \"myDeck\",\n\tinitialState: {\n\t\tdecks: [],\n\t\tselected: {},\n\t\tselectedCards: [],\n\t\tselectedCardIndex: 0,\n\t},\n\treducers: {\n\t\tsetDeck:(state,action) =>  {\n\t\t\tstate.decks = action.payload;\n\t\t},\n\t\taddDeck:(state, action) => {\n\t\t\tstate.decks.concat(action.payload);\n\t\t},\n\t\tgetDeck:(state) =>\n\t\t{\n\t\t\treturn state;\n\t\t},\n\t\tsetSelectedDeck: (state, action) => {\n\t\t\tstate.selected = action.payload;\n\t\t},\n\t\tsetSelectedCards: (state, action) => {\n\t\t\tstate.selectedCards = action.payload;\n\t\t},\n\t\tsetSelectedCardIndex: (state, action) => {\n\t\t\tstate.selectedCardIndex = action.payload;\n\t\t},\n\t\tupdateCard: (state, action) => {\n\t\t}\n\t}\n});\n\nexport const { updateCard, setDeck,getDeck, addDeck,setSelectedDeck, setSelectedCards,setSelectedCardIndex } = deckSlice.actions;\nexport default  deckSlice.reducer;\n","import { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { useCreateDeckMutation} from \"../services/deck\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { setDeck } from \"../sliceoflife/deck\"\nimport '../css/deckmodal.css'\n\nconst CreateDeckModal = () => {\n\tconst [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\tconst [inputs, setInputs] = useState({dname: ''});\n\tconst [clicked, setClicked] = useState(false);\n\tconst [resultStatus, setResultStatus] = useState(\"\");\n\tconst [  CreateNewDeck, { data, error,isLoading, isSuccess, isError }  ] = useCreateDeckMutation()\n\tconst dispatch = useDispatch();\n\n\tconst HandleSubmit = (event: any) => {\n\t\tevent.preventDefault();\n\t\t\n\t\tCreateNewDeck({ name: inputs.dname } )\n\t\tsetInputs({dname: ''});\n\n\t\tsetClicked(true);\n\t}\n\n\tif (clicked)\n\t{\n\t\tif (isSuccess)\n\t\t{\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tif (data.error)\n\t\t\t\t{\n\t\t\t\t\tsetResultStatus(data.error);\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(setDeck(data.decks));\n\t\t\t\t\tsetResultStatus(\"deck created!\");\n\t\t\t\t\thandleClose();\n\t\t\t\t}\n\t\t\t\tsetClicked(false);\n\t\t\t}\n\t\t}\n\t}\n\tconst HandleInputChange = (event: any) => {\n\t\tevent.persist();\n        setInputs((inputs: any) => ({ ...inputs, [event.target.name]: event.target.value }))\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={HandleSubmit}>\n\t\t\t\t<div className=\"mainContainer\">\n\t\t\t\t\t<div className=\"subContainer\">\n\t\t\t\t\t\t<label className=\"col-form-label col-form-label-sm\">\n\t\t\t\t\t\t\tDeck name\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mainContainer\">\n\t\t\t\t\t<div className=\"subContainer\">\n\t\t\t\t\t\t<input type=\"text\" name=\"dname\" id=\"dname\" className=\"form-input\" onChange={HandleInputChange} value={inputs.dname} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"subContainer\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" >Create Deck</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t\t{ isError ? (\n\t\t\t\t\t\t\t\t\t\t<> Sorry, an Error has occured. </>\n\t\t\t\t\t\t\t\t\t) : isSuccess ? (\n\t\t\t\t\t\t\t\t\t\t<> { resultStatus } </>\n\t\t\t\t\t\t\t\t\t) : isLoading ? (\n\t\t\t\t\t\t\t\t\t\t<> loading </>\n\t\t\t\t\t\t\t\t\t): null\n\t\t\t\t\t\t\t\t}\n\t\t\t</form>\n        </div>\n\t);\n};\n\nexport default CreateDeckModal;\n","import React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDeleteDeckMutation } from \"../services/deck\"\nimport { Deck } from \"../models/deck\"\nimport { setDeck,updateCard,setSelectedCards } from \"../sliceoflife/deck\"\n\ntype Props = {\n\tcloseCallback:any;\n}\n\nconst DeleteDeckModel: React.FC<Props>  = (props) => {\n\tconst [clicked, setClicked] = useState(false);\n\tconst [  DeleteDeck, { data, error,isLoading, isSuccess, isError }  ] = useDeleteDeckMutation()\n\tconst  myDecks  = useSelector( (state:any) => state.myDecks.decks)\n\tconst  selectedDeck = useSelector( (state:any) => state.myDecks.selected)\n\tconst [resultStatus, setResultStatus] = useState(\"\");\n\tconst dispatch = useDispatch();\n\n\tconst HandleSubmit = (event: any) => {\n\t\tevent.preventDefault();\n\t\tDeleteDeck(selectedDeck);\n\t\tsetClicked(true);\n\t}\n\n\tif (clicked)\n\t{\n\t\tif (isSuccess)\n\t\t{\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tif (data.error)\n\t\t\t\t{\n\t\t\t\t\tsetResultStatus(data.error);\n\t\t\t\t} else {\n\t\t\t\t\tsetResultStatus(\"Deletion successfull!\");\n\t\t\t\t\tdispatch(setDeck(data));\n\t\t\t\t\tprops.closeCallback();\n\t\t\t\t}\n\t\t\t\tsetClicked(false);\n\t\t\t}\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={HandleSubmit}>\n\t\t\t\t<h6>Are you sure you want to delete this?</h6>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" >yes</button>\n\t\t\t\t{ isError ? (\n\t\t\t\t\t<> Sorry, an Error has occured. </>\n\t\t\t\t  ) : isSuccess ? (\n\t\t\t\t\t<> { resultStatus } </>\n\t\t\t\t  ) : isLoading ? (\n\t\t\t\t\t<> loading </>\n\t\t\t\t  ): null\n\t\t\t\t}\n\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default DeleteDeckModel;\n","import React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport CreateDeckModal from './createdeckmodel'\nimport { useGetAllDecksQuery} from \"../services/deck\"\nimport { Deck } from \"../models/deck\"\nimport { setDeck,getDeck} from \"../sliceoflife/deck\"\nimport { QueryCache } from 'react-query'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\"\nimport { setSelectedDeck } from \"../sliceoflife/deck\"\nimport '../css/deck.css'\nimport '../css/index.css'\nimport { Modal, Button } from 'react-bootstrap';\nimport DeleteDeckModel from './deletedeckmodel'\nconst IndexPage:React.FC<unknown> = () => {\n\n\tconst [showDelete, setShowDelete] = useState(false);\n\tconst deleteClose = () => setShowDelete(false);\n\tconst deleteShow = () => setShowDelete(true);\n\tconst [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\n\tconst { data, error,isLoading, isSuccess, isError }   = useGetAllDecksQuery(\"\");\n\tconst [ isLoaded, setIsLoaded ] = useState(false);\n\tconst [ isMapped, setIsMapped] = useState(false);\n\tconst  myDecks  = useSelector( (state:any) => state.myDecks.decks)\n\tconst dispatch = useDispatch();\n\tlet history = useHistory();\n\n\tuseEffect(()=> {\n\t\tsetIsLoaded(false);\n\t}, [])\n \n\n    //<Link to={`/decks/${deck.id}`}>{deck.name}</Link>\n\n    const gotoDeck = (deck:any)  => (event:any) =>\n    {\n\n\t\tdispatch(setSelectedDeck(deck));\n\t\thistory.push(\"/decks/\" + deck.id + \"/\");\n    }\n\n    const settings = (deck:any) => (event:any) =>\n    {\n\t\tdispatch(setSelectedDeck(deck));\n\t\thistory.push(\"/settings/\" + deck.id + \"/\");\n    }\n\n    const deleteDeck = (deck:any) => (event:any) =>\n    {\n\t\tdispatch(setSelectedDeck(deck));\n\t\tdeleteShow();\n    }\n\n\tconst mapIt = (mapData:[]) => (\n\t\tmapData.map((deck:Deck) => (\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t{deck.id}\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<a href=\"#\" onClick={gotoDeck(deck) }>{deck.name}</a>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t{deck.dueDate}\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t{deck.totalCards}\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t{deck.totalStudied}\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<a href=\"#\" onClick={settings(deck)}>Settings</a>\n\t\t\t\t\t<button className=\"btn btn-danger deleteButton\" onClick={deleteDeck(deck)}>Delete</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t)\n\n\t\t\n\t\n\t)\n\n\t);\n\n\t\n\tif (isSuccess)\n\t{\n\t\tif (isLoaded == false)\n\t\t{\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t*/\n\t\t\t\tdispatch(setDeck(data));\n\t\t\t\tsetIsLoaded(true);\n\t\t\t\tsetIsMapped(true);\n\t\t\t}\n\t\t}\n\t}\n\n   \n\tconst closeModel = (childData:any) => {\n\t\tdeleteClose();\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t        <div className=\"centering\">\n\t\t\t\t<div className=\"container col-xxl-12 col-xxl-12\">\n\t\t\t\t\t<div className=\"row align-items-center\">\n\t\t\t\t\t\t<Modal show={showDelete} onHide={deleteClose} backdrop=\"static\">\n\t\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Title>Delete Deck</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<DeleteDeckModel closeCallback={closeModel}/>\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={deleteClose}>Close</Button>\n\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row align-items-center\">\n\t\t\t\t\t\t<Modal show={show} onHide={handleClose} backdrop=\"static\">\n\t\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Title>Create Deck</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<CreateDeckModal />\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</div>\n\t\t\t\t   </div>\n\t\t\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light static-top\">\n\t\t\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<button onClick={handleShow} type=\"button\" className=\"btn btn-primary\">Add Deck</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</nav>\n\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\">#</th>\n\t\t\t\t\t\t<th scope=\"col\">Deck Name</th>\n\t\t\t\t\t\t<th scope=\"col\">Due Date</th>\n\t\t\t\t\t\t<th scope=\"col\">Total Cards</th>\n\t\t\t\t\t\t<th scope=\"col\">Total Studed</th>\n\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{mapIt(myDecks) }\n\t\t\t\t\t\t\t\t{ isError ? (\n\t\t\t\t\t\t\t\t\t\t<> Sorry, an Error has occured. </>\n\t\t\t\t\t\t\t\t\t) : isSuccess ? (\n\t\t\t\t\t\t\t\t\t\t<> {  }  </>\n\t\t\t\t\t\t\t\t\t) : isLoading ? (\n\t\t\t\t\t\t\t\t\t\t<> loading </>\n\t\t\t\t\t\t\t\t\t): null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default IndexPage;\n","import React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport CreateDeckModal from './createdeckmodel'\nimport { useGetAllDecksQuery} from \"../services/deck\"\nimport { Deck } from \"../models/deck\"\nimport { setDeck,getDeck} from \"../sliceoflife/deck\"\nimport { QueryCache } from 'react-query'\nimport { Link } from 'react-router-dom'\nimport '../css/deck.css'\nimport { useHistory } from \"react-router-dom\"\n\nconst Decks = () => {\n\tlet history = useHistory();\n\tconst  myDeck  = useSelector( (state:any) => state.myDecks.selected)\n\n\tconst editClick = () =>\n\t{\n\t\thistory.push(\"/editdeck/\" + myDeck.id + \"/\");\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h3 className=\"decktitle\">{ myDeck.name }</h3>\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light static-top\">\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div className=\"deckbuttons\">\n\t\t\t\t\t\t<button  type=\"button\" className=\"deckbuttons btn btn-primary\">Study</button> \n\t\t\t\t\t\t<button  type=\"button\" className=\"deckbuttons btn btn-primary\" onClick={editClick}>Edit deck</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t<div className=\"listcontent\">\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between align-items-center\">\n\t\t\t\t\t    Total cards in deck\n\t\t\t\t\t\t<span className=\"badge bg-primary rounded-pill\">14</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between align-items-center\">\n\t\t\t\t\t    Total cards stuided: \n\t\t\t\t\t    <span className=\"badge bg-primary rounded-pill\">2</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between align-items-center\">\n\t\t\t\t\t    Next Addition:  \n\t\t\t\t\t\t<span className=\"badge bg-primary rounded-pill\">2021-09-04 17:54:29 </span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n        </div>\n\t);\n}\n\nexport default Decks;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\nimport { Card } from \"../models/card\"\n\nexport const cardApi = createApi({\n\treducerPath: `card`,\n\tbaseQuery: fetchBaseQuery( {\n\t}),\n\ttagTypes: ['Post', 'Card'],\n\tendpoints: (builder) => ({\n\t\tcreateCard: builder.mutation ({\n\t\t\tquery: (input) => ({\n\t\t\t\turl: `/card`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json; charset=utf-8'\n                },\n\t\t\t\tbody: input,\n\t\t\t}),\n\t\t\tinvalidatesTags: ['Post'],\n\t\t}),\n\t\teditCard: builder.mutation({\n\t\t\tquery: (card:Card) => ({\n\t\t\t\turl: `/card`,\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json; charset=utf-8'\n\t\t\t\t},\n\t\t\t\tbody: card,\n\t\t\t}),\n\t\t}),\n\t\tdeleteCard: builder.mutation({\n\t\t\tquery: (card:Card) => ({\n\t\t\t\turl: `/card`,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json; charset=utf-8'\n\t\t\t\t},\n\t\t\t\tbody: card,\n\t\t\t}),\n\t\t}),\n\t\tgetAllCards: builder.query({\n\t\t\tquery: (deckId) => '/cards/' + deckId\n\t\t}),\n\t}),\n});\n\nexport const { useCreateCardMutation, useGetAllCardsQuery,useEditCardMutation, useDeleteCardMutation } = cardApi;\n","\nimport { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { useEditCardMutation } from \"../services/card\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { setDeck,updateCard,setSelectedCards } from \"../sliceoflife/deck\"\nimport { Card } from \"../models/card\"\n\nconst EditCardModal = () => {\n\tconst [editShow, setEditShow] = useState(false);\n\tconst editHandleClose = () => setEditShow(false);\n\tconst editHandleShow = () => setEditShow(true);\n\tconst [inputs, setInputs] = useState({cardBack: '', cardFront: ''});\n\tconst [clicked, setClicked] = useState(false);\n\tconst [resultStatus, setResultStatus] = useState(\"\");\n\tconst [  EditCard, { data, error,isLoading, isSuccess, isError }  ] = useEditCardMutation()\n\tconst  myDeck  = useSelector( (state:any) => state.myDecks)\n\tconst dispatch = useDispatch();\n\tconst [scard, setCard] = useState({});\n\t\n    useEffect(() => {\n\t\tif (myDeck.selectedCardIndex != -1)\n\t\t{\n\t\t\tconst c:Card = myDeck.selectedCards[myDeck.selectedCardIndex];\n\t\t\tsetInputs({cardBack: c.back, cardFront: c.front});\n\t\t}\n\t\t//setInputs({cardBack:c.front, cardFront: c.back});\n    }, [null]);\n\n\n\tconst HandleSubmit = (event: any) => {\n\t\tevent.preventDefault();\n\n\t\tconst editCard:Card = myDeck.selectedCards[myDeck.selectedCardIndex];\n\t\tconst newCard:Card = { id: editCard.id,deckId: 0, front: inputs.cardFront, back:inputs.cardBack, dueDate: '' };\n\n\t\tEditCard(newCard);\n\t\tsetClicked(true);\n\t}\n\n\tif (clicked)\n\t{\n\t\tif (isSuccess)\n\t\t{\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tif (data.error)\n\t\t\t\t{\n\t\t\t\t\tsetResultStatus(data.error);\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(setSelectedCards(data));\n\t\t\t\t\tsetResultStatus(\"Edit successfull!\");\n\t\t\t\t\teditHandleClose();\n\t\t\t\t}\n\t\t\t\tsetClicked(false);\n\t\t\t}\n\t\t}\n\t}\n\tconst HandleInputChange = (event: any) => {\n\t\tevent.persist();\n\t\tsetInputs((inputs: any) => ({ ...inputs, [event.target.name]: event.target.value }))\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={HandleSubmit}>\n\t\t\t\t<h6>Card front</h6>\n\t\t\t\t<input type=\"text\" name=\"cardFront\" id=\"cardFront\" className=\"form-input\" onChange={HandleInputChange} value={inputs.cardFront} />\n\t\t\t\t<h6>Card back</h6>\n\t\t\t\t<input type=\"text\" name=\"cardBack\" id=\"cardBack\" className=\"form-input\" onChange={HandleInputChange} value={inputs.cardBack} />\n\t\t\t\t<h6/> <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\n\t\t\t\t{ isError ? (\n\t\t\t\t\t<> Sorry, an Error has occured. </>\n\t\t\t\t  ) : isSuccess ? (\n\t\t\t\t\t<> { resultStatus } </>\n\t\t\t\t  ) : isLoading ? (\n\t\t\t\t\t<> loading </>\n\t\t\t\t  ): null\n\t\t\t   }\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default EditCardModal;\n","import { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { useCreateCardMutation} from \"../services/card\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { setDeck } from \"../sliceoflife/deck\"\n\nconst CreateCardModal = () => {\n\tconst [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\tconst [inputs, setInputs] = useState({cardBack: '', cardFront: ''});\n\tconst [clicked, setClicked] = useState(false);\n\tconst [resultStatus, setResultStatus] = useState(\"\");\n\tconst [  CreateNewCard, { data, error,isLoading, isSuccess, isError }  ] = useCreateCardMutation()\n\tconst  myDeck  = useSelector( (state:any) => state.myDecks.selected)\n\tconst dispatch = useDispatch();\n\n\tconst HandleSubmit = (event: any) => {\n\t\tevent.preventDefault();\n\t\t\n\t\tCreateNewCard({ deckId: myDeck.id, front: inputs.cardFront, back: inputs.cardBack } )\n\t\tsetInputs({cardBack: '', cardFront: ''});\n\t\tsetClicked(true);\n\t}\n\n\tif (clicked)\n\t{\n\t\tif (isSuccess)\n\t\t{\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tif (data.error)\n\t\t\t\t{\n\t\t\t\t\tsetResultStatus(data.error);\n\t\t\t\t} else {\n\t\t\t\t\tsetResultStatus(\"card created!\");\n\t\t\t\t\thandleClose();\n\t\t\t\t}\n\t\t\t\tsetClicked(false);\n\t\t\t}\n\t\t}\n\t}\n\tconst HandleInputChange = (event: any) => {\n\t\tevent.persist();\n\t\tsetInputs((inputs: any) => ({ ...inputs, [event.target.name]: event.target.value }))\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={HandleSubmit}>\n\t\t\t\t<h6>Card front</h6>\n\t\t\t\t<input type=\"text\" name=\"cardFront\" id=\"cardFront\" className=\"form-input\" onChange={HandleInputChange} value={inputs.cardFront} />\n\t\t\t\t<h6>Card back</h6>\n\t\t\t\t<input type=\"text\" name=\"cardBack\" id=\"cardBack\" className=\"form-input\" onChange={HandleInputChange} value={inputs.cardBack} />\n\t\t\t\t<h6/>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" >Create Deck</button>\n\t\t\t\t{ isError ? (\n\t\t\t\t\t<> Sorry, an Error has occured. </>\n\t\t\t\t  ) : isSuccess ? (\n\t\t\t\t\t<> { resultStatus } </>\n\t\t\t\t  ) : isLoading ? (\n\t\t\t\t\t<> loading </>\n\t\t\t\t  ): null\n\t\t\t   }\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default CreateCardModal;\n","import React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDeleteCardMutation } from \"../services/card\"\nimport { Card } from \"../models/card\"\nimport { setDeck,updateCard,setSelectedCards } from \"../sliceoflife/deck\"\n\nconst DeleteCardModel  = () => {\n\tconst [deleteShow, setDeleteShow] = useState(false);\n\tconst handleDeleteClose = () => setDeleteShow(false);\n\tconst handleDeleteShow = () => setDeleteShow(true);\n\tconst [clicked, setClicked] = useState(false);\n\tconst [resultStatus, setResultStatus] = useState(\"\");\n\tconst [  DeleteCard, { data, error,isLoading, isSuccess, isError }  ] = useDeleteCardMutation()\n\tconst dispatch = useDispatch();\n\tconst  myCards = useSelector( (state:any) => state.myDecks.selectedCards)\n\tconst  myDeck  = useSelector( (state:any) => state.myDecks)\n\n\tconst HandleSubmit = (event: any) => {\n\t\tevent.preventDefault();\n\t\tlet editCard:Card = myDeck.selectedCards[myDeck.selectedCardIndex];\n\t\tlet newCard:Card = { id: editCard.id ,deckId: 0, front: '', back:'', dueDate: '' };\n\t\tDeleteCard(newCard);\n\t\tsetClicked(true);\n\t}\n\n\tif (clicked)\n\t{\n\t\tif (isSuccess)\n\t\t{\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tif (data.error)\n\t\t\t\t{\n\t\t\t\t\tsetResultStatus(data.error);\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(setSelectedCards(data));\n\t\t\t\t\tsetResultStatus(\"Deletion successfull!\");\n\t\t\t\t}\n\t\t\t\tsetClicked(false);\n\t\t\t}\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={HandleSubmit}>\n\t\t\t\t<h6>Are you sure you want to delete this?</h6>\n\t\t\t\t<h6/> <button type=\"submit\" className=\"btn btn-primary\" >yes</button>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" >no</button>\n\t\t\t\t{ isError ? (\n\t\t\t\t\t<> Sorry, an Error has occured. </>\n\t\t\t\t  ) : isSuccess ? (\n\t\t\t\t\t<> { resultStatus } </>\n\t\t\t\t  ) : isLoading ? (\n\t\t\t\t\t<> loading </>\n\t\t\t\t  ): null\n\t\t\t   }\n\t\t\t</form>\n\n\t\t</div>\n\t);\n};\n\nexport default DeleteCardModel;\n\n","import React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport CreateDeckModal from './createdeckmodel'\nimport EditCardModal from './editcardmodel'\nimport { useGetAllCardsQuery} from \"../services/card\"\nimport { Deck } from \"../models/deck\"\nimport { setDeck,getDeck} from \"../sliceoflife/deck\"\nimport { QueryCache } from 'react-query'\nimport { Link } from 'react-router-dom'\nimport CreateCardModal from './createcardmodel'\nimport { Modal, Button } from 'react-bootstrap';\nimport { setSelectedCards, setSelectedCardIndex } from \"../sliceoflife/deck\"\nimport { Card } from \"../models/card\"\nimport DeleteCardModel from \"./deletecardmodel\"\n\nconst DeckEdit = () => {\n\t    const  myDeck  = useSelector( (state:any) => state.myDecks.selected)\n\t    const  myCards = useSelector( (state:any) => state.myDecks.selectedCards)\n\t\tconst dispatch = useDispatch();\n\t\tconst { data, error,isLoading, isSuccess, isError }   = useGetAllCardsQuery(myDeck.id);\n\t\tconst [show, setShow] = useState(false);\n\t\tconst [editShow, setEditShow] = useState(false);\n\t\tconst handleClose = () => setShow(false);\n\t\tconst handleShow = () => setShow(true);\n\t\tconst editHandleClose = () => setEditShow(false);\n\t\tconst editHandleShow = () => setEditShow(true);\n\n\t\tconst [deleteShow, setDeleteShow] = useState(false);\n\t\tconst deleteHandleClose = () => setDeleteShow(false);\n\t\tconst deleteHandleShow = () => setDeleteShow(true);\n\n\t\tconst [ isLoaded, setIsLoaded ] = useState(false);\n\t\tconst [ isMapped, setIsMapped] = useState(false);\n\n\t\tconst editCard = (cardId:number) => () =>\n\t\t{\n\t\t\tdispatch(setSelectedCardIndex(cardId));\n\t\t\teditHandleShow();\n\t\t}\n\n\t\tconst deleteCard = (cardId:number) => () =>\n\t\t{\n\t\t\tdispatch(setSelectedCardIndex(cardId));\n\t\t\tdeleteHandleShow();\n\t\t}\n\n\t\tconst mapIt = (mapData:[]) => (\n\t\t\tmapData.map((card:Card, i) => (\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{i+1}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{card.front}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{card.back}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{card.dueDate}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={editCard(i)}>Edit</button>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={deleteCard(i)}>Delete</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t)\n\n\t\t);\n\n\n\t\tif (isSuccess)\n\t\t{\n\t\t\tif (isLoaded == false)\n\t\t\t{\n\t\t\t\tif (data)\n\t\t\t\t{\n\t\t\t\t\tdispatch(setSelectedCards(data));\n\t\t\t\t\tsetIsLoaded(true);\n\t\t\t\t\tsetIsMapped(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"centering\">\n\t\t\t\t<div className=\"container col-xxl-12 col-xxl-12\">\n\t\t\t\t\t<div className=\"row align-items-center\">\n\t\t\t\t\t\t<Modal show={show} onHide={handleClose} backdrop=\"static\">\n\t\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Title>Create Card</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<CreateCardModal />\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row align-items-center\">\n\t\t\t\t\t\t<Modal show={editShow} onHide={editHandleClose} backdrop=\"static\">\n\t\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Title>Edit Card</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<EditCardModal />\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={editHandleClose}>Close</Button>\n\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row align-items-center\">\n\t\t\t\t\t\t<Modal show={deleteShow} onHide={deleteHandleClose} backdrop=\"static\">\n\t\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Title>Delete Card</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<DeleteCardModel />\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={deleteHandleClose}>Close</Button>\n\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\n\n\t\t\t\t<h3 className=\"decktitle\">{myDeck.name }</h3>\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light static-top\">\n\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t<div className=\"deckbuttons\">\n\t\t\t\t\t\t\t<button  type=\"button\" className=\"deckbuttons btn btn-primary\" onClick={handleShow}>+</button> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t\t<div>\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"col\">#</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Front</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Back</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Due</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Actions</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{mapIt(myCards)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t</div>);\n};\n\nexport default DeckEdit;\n","import React from 'react'\nimport { useState, useEffect } from 'react'\n\n\ntype Props = {\n\tvalue:number;\n\tparentCallback:any;\n}\n\nconst TextScrollComponent: React.FC<Props> = (props) => {\n\t\n\tconst [count,setCount] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tsetCount(\"\" + props.value);\n\t}, [null]);\n\n\t\n\tconst handleOnChange = (e:any) => {\n\t\tsetCount(e.target.value);\n\t\tprops.parentCallback(e.target.value);\n\t}\n\n\tconst increaseValue = () => {\n\t\tlet oldValue:number = +count;\n\t\t++oldValue;\n\t\tsetCount(\"\" + oldValue);\n\t\tprops.parentCallback(\"\" + oldValue);\n\t}\n\n\tconst decreaseValue = () => {\n\t\tlet oldValue:number = +count;\n\t\t--oldValue;\n\t\tsetCount(\"\" + oldValue);\n\t\tprops.parentCallback(\"\" + oldValue);\n\t}\n\n\treturn (\n\t\t<div> \n\t\t\t<div className=\"input-group\">\n\t\t\t\t<button className=\"btn btn-outline-secondary\" type=\"button\" onClick={increaseValue}>+</button>\n\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username with two button addons\" value={count} onChange={(e) => {handleOnChange(e) }} />\n\t\t\t\t<button className=\"btn btn-outline-secondary\" type=\"button\" onClick={decreaseValue}>-</button>\n\t\t\t </div>\n\t\t</div>\n\t)\n}\n\nexport default TextScrollComponent;\n","import { useState, useEffect } from 'react'\nimport   TextScrollComponent  from './textscrollcomponent'\n\nconst DateComponent = () => {\n\n\tconst [days ,setDays] = useState(0);\n\tconst [hours,setHours] = useState(0);\n\tconst [mins,setMins] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetDays(0);\n\t\tsetHours(0);\n\t\tsetMins(0);\n\t}, [null]);\n\n\n\tconst daysToSecs = (childData:any) => {\n\t\tsetDays(childData);\n\t}\n\n\tconst hoursToSecs = (childData:any) => {\n\t\tsetHours(childData);\n\n\t}\n\tconst minsToSecs = (childData:any) => {\n\t\tsetHours(childData);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tDay\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tHours\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tMins\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<TextScrollComponent value={ days } parentCallback = { daysToSecs } />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<TextScrollComponent value={ hours } parentCallback = { hoursToSecs } />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<TextScrollComponent value={ mins } parentCallback = { minsToSecs } />\n\t\t\t\t\t\t</td>\n\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nexport default DateComponent;\n","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\nimport DateComponent from './datecomponent'\n\n\ntype Props = {\n\tvalue:number;\n\tonDateChanged:any;\n}\n\nconst DeckSettings: React.FC<Props> = (props)  => {\n\n\tconst  myDeck  = useSelector( (state:any) => state.myDecks.selected)\n\tconst [count,setCount] = useState(1);\n\n\tuseEffect(() => {\n\t}, [null]);\n\n\tconst handleCallback = (childData:any) => {\n\t\tconsole.log(childData);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>{ myDeck.name }</h1>\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tDeck Options\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tCard added Per Day\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\">\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">1</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">5</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">10</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">30</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">80</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">100</Button>\n\t\t\t\t\t\t    </ButtonGroup>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tDeck Timer\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\">\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">Off</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">5 mins</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">10 mins</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">15 mins</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\">30 mins</Button>\n\t\t\t\t\t\t    </ButtonGroup>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tRandomize Cards\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t<BootstrapSwitchButton\n\t\t\t\t\t\t    checked={false}\n\t\t\t\t\t\t    onlabel='On'\n\t\t\t\t\t\t    offlabel='Off'\n\t\t\t\t\t\t    onChange={(checked: boolean) => {\n\t\t\t\t\t\t    }}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tCard Options\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody >\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\tDelay 1:\n\t\t\t\t\t\t\t<DateComponent  />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\tDelay 2:\n\t\t\t\t\t\t\t<DateComponent />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\tDelay 3:\n\t\t\t\t\t\t\t<DateComponent />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\tDelay 4:\n\t\t\t\t\t\t\t<DateComponent />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nexport default DeckSettings;\n","import React from 'react'\nimport { Switch } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport  LoginPage from '../components/loginpage'\nimport  IndexPage from '../components/indexpage'\nimport  Decks from '../components/decks'\nimport  DeckEdit from '../components/deckedit'\nimport  DeckSettings from '../components/decksettings'\n\n\n\nconst AppRoutes: React.FC<unknown> = (props) => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/' component={LoginPage} />\n\t\t\t<Route exact path='/index' component={IndexPage} />\n\t\t\t<Route exact path='/decks/:deckId' component={Decks} />\n\t\t\t<Route exact path='/editdeck/:deckId' component={DeckEdit} />\n\t\t\t<Route exact path='/settings/:deckId' component={DeckSettings } />\n\t\t</Switch>\n\t);\n}\n\nexport default AppRoutes;\n","import react from 'react'\n\nlet NavBar:React.FC<unknown> = (props) => {\n\n\treturn (\n\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark static-top\">\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<a className=\"navbar-brand\" href=\"#\">Navbar</a>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default NavBar;\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport { AnyAction, applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxThunk, { ThunkDispatch } from \"redux-thunk\";\nimport { loginApi } from \"./services/login\"\nimport { deckApi } from \"./services/deck\"\nimport { cardApi } from \"./services/card\"\nimport  deckReducer  from \"./sliceoflife/deck\"\nimport thunk from 'redux-thunk'\n\nexport const store = configureStore({\n\treducer: {\n\t\tmyDecks:deckReducer,\n\t\t[loginApi.reducerPath]: loginApi.reducer,\n\t\t[deckApi.reducerPath]: deckApi.reducer,\n\t\t[cardApi.reducerPath]: cardApi.reducer,\n\t},\n\tmiddleware: (getDefaultMiddiware) =>\n\t\tgetDefaultMiddiware().concat(loginApi.middleware,deckApi.middleware, cardApi.middleware, thunk),\n\t\t\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch & ThunkDispatch<RootState, void, AnyAction>\n\nexport default store;\n\n","import React from 'react';\nimport { CookiesProvider } from 'react-cookie';\nimport AppRoutes from './Router/AppRoutes';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Provider } from 'react-redux';\nimport NavBar from './components/navbar';\nimport store from './store';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <ToastContainer />\n\t<Provider store={store}>\n      <BrowserRouter>\n\t\t<CookiesProvider>\n\t\t<NavBar />\n\t\t<br/><br/>\n\t\t<AppRoutes />\n\t\t</CookiesProvider>\n      </BrowserRouter>\n    </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}